
name: Build_CR660X

on: 
   release:
     description: 是否需要发布到Release?(不发布也可以到Artifacts下载)
     default: 'yes'
     required: false

  # push:                             # push 操作
    # branches:                       # 分支
      # - master                      # 主分支

  #schedule:                          # 时间表
  #  - cron: 0 5 22 1/31 * ? *        # 每31天国际时间22点05分，北京时间凌晨3点执行(北京+8)
  
  watch:                              # 监视操作
    types: [started]                  # 点击 star 之后
  
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04              #虚拟机环境:ubuntu-latest，ubuntu-22.04或ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify git gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        # git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        git clone https://github.com/esirplayground/luci-app-eqos.git openwrt/package/eqos
        mv openwrt/package/eqos/po/zh_Hans openwrt/package/eqos/po/zh-cn
        cd openwrt
        echo "src-git helloworld https://github.com/fw876/helloworld" >> ./feeds.conf.default
        # rm openwrt/target/linux/ramips/dts/mt7621_xiaomi_mi-router-cr660x.dts
        # cp mt7621_xiaomi_mi-router-cr660x.dts openwrt/target/linux/ramips/dts/mt7621_xiaomi_mi-router-cr660x.dts
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        # sed -i 's/# CONFIG_BINFMT_MISC is not set/CONFIG_BINFMT_MISC=y/g' ./target/linux/generic/config-5.4
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    #- name: Import external feeds
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/xiaorouji/openwrt-package.git package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    - name: Configuration Customization - Build_CR660X
      env:
        CONFIG_FILE: 'CR660X.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
